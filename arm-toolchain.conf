# ARM Linux CMake cross compilation configuration
#
# Usage:
#
#    mkdir armbuild
#    cd armbuild
#    cmake -DCMAKE_TOOLCHAIN_FILE=../arm-toolchain.conf ..
#    make

set(CMAKE_SYSTEM_NAME Linux)

set(CMAKE_SYSROOT /usr/arm-linux-gnueabi)
# Set CMAKE_STAGING_PREFIX to redirect the `make install` target to another sysroot
set(CMAKE_STAGING_PREFIX /usr/arm-linux-gnueabi/usr)

# GCC cross compiler
set(CMAKE_C_COMPILER arm-linux-gnueabi-gcc)
set(CMAKE_CXX_COMPILER arm-linux-gnueabi-g++)
# or for Clang
#~ set(triple armv7a-linux-gnueabi)
#~ set(CMAKE_C_COMPILER clang)
#~ set(CMAKE_C_COMPILER_TARGET ${triple})
#~ set(CMAKE_CXX_COMPILER clang++)
#~ set(CMAKE_CXX_COMPILER_TARGET ${triple})

# Use build-time required programs from the host sysroot, avoid build sysroot
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# Search for headers and libraries from the build sysroot only, avoid host sysroot
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# Fix error:
# -- Check if compiler accepts -pthread
# CMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:
#    THREADS_PTHREAD_ARG (advanced)
#set(THREADS_HAVE_PTHREAD_ARG NO)
